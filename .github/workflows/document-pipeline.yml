name: Document Pipeline

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Run in dry-run mode (no writes to vector store)"
        required: true
        default: "true"
        type: choice
        options: ["true", "false"]
      skip_ai:
        description: "Skip AI question generation"
        required: true
        default: "true"
        type: choice
        options: ["true", "false"]
  schedule:
    - cron: "0 3 * * *"  # 03:00 UTC nightly
  push:
    branches:
      - automate

jobs:
  run-pipeline:
    if: github.ref == 'refs/heads/automate'
    runs-on: ubuntu-latest
    env:
      VITE_OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      TEST_VECTOR_STORE_ID: ${{ secrets.TEST_VECTOR_STORE_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r scripts/requirements.txt

      - name: Preflight env check
        run: |
          python scripts/check_env.py | cat

      - name: Compute flags
        id: flags
        run: |
          # Default to dry-run/skip-ai on schedule and push; use inputs for manual dispatch
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            DRY_RUN_INPUT=${{ github.event.inputs.dry_run }}
            SKIP_AI_INPUT=${{ github.event.inputs.skip_ai }}
          else
            DRY_RUN_INPUT=true
            SKIP_AI_INPUT=true
          fi
          echo "dry_run=$DRY_RUN_INPUT" >> $GITHUB_OUTPUT
          echo "skip_ai=$SKIP_AI_INPUT" >> $GITHUB_OUTPUT

      - name: Run pipeline
        run: |
          set -euo pipefail
          DRY_FLAG=""
          if [ "${{ steps.flags.outputs.dry_run }}" = "true" ]; then
            DRY_FLAG="--dry-run"
          fi
          SKIP_AI_FLAG=""
          if [ "${{ steps.flags.outputs.skip_ai }}" = "true" ]; then
            SKIP_AI_FLAG="--skip-ai"
          fi
          echo "Using flags: $DRY_FLAG $SKIP_AI_FLAG"
          python run_pipeline.py $DRY_FLAG $SKIP_AI_FLAG --log-level INFO | cat

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-artifacts
          path: |
            state/
            Policy_Documents_Metadata_Index.json
            Guide_Documents_Metadata_Index.json
            MHA_Documents_Metadata_Index.json
